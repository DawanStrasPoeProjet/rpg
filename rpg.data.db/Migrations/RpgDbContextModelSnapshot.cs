// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPG.Data.Db.Contexts;

#nullable disable

namespace RPG.Data.Db.Migrations
{
    [DbContext(typeof(RpgDbContext))]
    partial class RpgDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RPG.Data.Db.Models.Entity", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"), 1L, 1);

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<string>("BagItemIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultEquippedItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("EquippedItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Initiative")
                        .HasColumnType("int");

                    b.Property<bool>("IsPlayer")
                        .HasColumnType("bit");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("int");

                    b.Property<int>("MaxMagic")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Attack = 20,
                            BagItemIds = "small_life_potion,life_potion,small_life_potion",
                            DefaultEquippedItemId = "fist",
                            Defense = 15,
                            EquippedItemId = "greatsword",
                            Health = 80,
                            Id = "player",
                            Initiative = 12,
                            IsPlayer = true,
                            Magic = 0,
                            MaxHealth = 80,
                            MaxMagic = 0,
                            Money = 0,
                            Name = "Hero",
                            Tags = "player"
                        },
                        new
                        {
                            EntityId = 2,
                            Attack = 15,
                            BagItemIds = "small_life_potion",
                            DefaultEquippedItemId = "sword",
                            Defense = 15,
                            Health = 30,
                            Id = "bandit",
                            Initiative = 12,
                            IsPlayer = false,
                            Magic = 0,
                            MaxHealth = 30,
                            MaxMagic = 0,
                            Money = 0,
                            Name = "Bandit"
                        },
                        new
                        {
                            EntityId = 3,
                            Attack = 17,
                            BagItemIds = "life_potion",
                            DefaultEquippedItemId = "dagger",
                            Defense = 16,
                            Health = 20,
                            Id = "thief",
                            Initiative = 16,
                            IsPlayer = false,
                            Magic = 0,
                            MaxHealth = 25,
                            MaxMagic = 0,
                            Money = 0,
                            Name = "Voleur"
                        },
                        new
                        {
                            EntityId = 4,
                            Attack = 20,
                            DefaultEquippedItemId = "warhammer",
                            Defense = 10,
                            Health = 40,
                            Id = "orc",
                            Initiative = 8,
                            IsPlayer = false,
                            Magic = 0,
                            MaxHealth = 40,
                            MaxMagic = 0,
                            Money = 0,
                            Name = "Orc"
                        });
                });

            modelBuilder.Entity("RPG.Data.Db.Models.PotionItem", b =>
                {
                    b.Property<int>("PotionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PotionItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PotionItemId");

                    b.ToTable("PotionItems");

                    b.HasData(
                        new
                        {
                            PotionItemId = 1,
                            Description = "Une petite potion de vie mineure. Restaure 10 hp.",
                            Health = 10,
                            Id = "small_life_potion",
                            Magic = 0,
                            Name = "Potion de vie mineure",
                            Price = 0,
                            Tags = "healing,consumable"
                        },
                        new
                        {
                            PotionItemId = 2,
                            Description = "Une potion de vie. Restaure 20 hp.",
                            Health = 20,
                            Id = "life_potion",
                            Magic = 0,
                            Name = "Potion de vie",
                            Price = 0,
                            Tags = "healing,consumable"
                        });
                });

            modelBuilder.Entity("RPG.Data.Db.Models.QuestItem", b =>
                {
                    b.Property<int>("QuestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestItemId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestItemId");

                    b.ToTable("QuestItems");
                });

            modelBuilder.Entity("RPG.Data.Db.Models.WeaponItem", b =>
                {
                    b.Property<int>("WeaponItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeaponItemId"), 1L, 1);

                    b.Property<int>("BaseDamage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumDiceFaces")
                        .HasColumnType("int");

                    b.Property<int>("NumDiceRolls")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeaponItemId");

                    b.ToTable("WeaponItems");

                    b.HasData(
                        new
                        {
                            WeaponItemId = 1,
                            BaseDamage = 2,
                            Description = "Des poings...",
                            Id = "fist",
                            Name = "Poings",
                            NumDiceFaces = 4,
                            NumDiceRolls = 1,
                            Price = 0,
                            Tags = "fast"
                        },
                        new
                        {
                            WeaponItemId = 2,
                            BaseDamage = 6,
                            Description = "Un espadon...",
                            Id = "greatsword",
                            Name = "Espadon",
                            NumDiceFaces = 12,
                            NumDiceRolls = 1,
                            Price = 0,
                            Tags = "slow"
                        },
                        new
                        {
                            WeaponItemId = 3,
                            BaseDamage = 6,
                            Description = "Une épée...",
                            Id = "sword",
                            Name = "Épée",
                            NumDiceFaces = 8,
                            NumDiceRolls = 1,
                            Price = 0,
                            Tags = "fast"
                        },
                        new
                        {
                            WeaponItemId = 4,
                            BaseDamage = 5,
                            Description = "Une dague...",
                            Id = "dagger",
                            Name = "Dague",
                            NumDiceFaces = 4,
                            NumDiceRolls = 2,
                            Price = 0,
                            Tags = "fast"
                        },
                        new
                        {
                            WeaponItemId = 5,
                            BaseDamage = 6,
                            Description = "Un marteau de guerre...",
                            Id = "warhammer",
                            Name = "Marteau de guerre",
                            NumDiceFaces = 8,
                            NumDiceRolls = 1,
                            Price = 0,
                            Tags = "slow"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
